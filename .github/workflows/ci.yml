# .github/workflows/ci.yml
name: Pine Mastery CI

on:
  push:
    paths:
      - 'spec_ingest.py'
      - 'tests/**'
      - 'community_sources.txt'
      - 'harvest_scripts.py'
      - 'generate_finetune_data.py'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out code
      - uses: actions/checkout@v3

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 3. Install core Python deps for spec ingestion & tests
      - name: Install requests & bs4
        run: pip install requests beautifulsoup4

      # 4. Ingest the latest Pine v6 spec
      - name: Ingest Pine v6 spec
        run: python spec_ingest.py

      # 5. Diff the two most recent spec snapshots
      - name: Diff previous and current spec
        run: |
          python - << 'EOF'
          import os, sys, difflib
          SPEC_DIR = "specs"
          files = sorted(f for f in os.listdir(SPEC_DIR)
                         if f.startswith("pine_v6_spec_") and f.endswith(".html"))
          if len(files) < 2:
              print("Only one spec snapshot; skipping diff check.")
              sys.exit(0)
          prev, curr = files[-2], files[-1]
          old = open(f"{SPEC_DIR}/{prev}", encoding="utf-8").read().splitlines()
          new = open(f"{SPEC_DIR}/{curr}", encoding="utf-8").read().splitlines()
          diff = list(difflib.unified_diff(old, new, fromfile=prev, tofile=curr, lineterm=""))
          if diff:
              print(f"ðŸ“˜ Spec changed between {prev} and {curr}:")
              print("\n".join(diff))
              sys.exit(1)
          else:
              print("No changes detected in Pine v6 spec.")
              sys.exit(0)
          EOF

      # 6. Generate the Pine test scripts
      - name: Generate Pine tests
        run: python tests/generate_tests.py

      # 7. List spec & test outputs
      - name: List specs and tests
        run: |
          echo "Specs directory contents:" && ls specs
          echo "Tests directory contents:" && ls tests

      # â€¦ earlier steps â€¦

      # Install harvesting deps (requests + bs4)
      - name: Install harvesting deps
        run: pip install requests beautifulsoup4

      # Harvest community scripts
      - name: Harvest community scripts
        run: python harvest_scripts.py

      # Preview community scripts folder
      - name: List community scripts
        run: |
          echo "Community directory contents:" && ls community

      # Ensure bs4 is available for fineâ€‘tune generator
      - name: Install bs4 for fineâ€‘tune step
        run: pip install beautifulsoup4

      # Generate fineâ€‘tune dataset
      - name: Generate fineâ€‘tune dataset
        run: python generate_finetune_data.py

      # Check that the file got written
      - name: List generated dataset file
        run: |
          echo "Root directory contents:" && ls -1
          echo "First 5 lines of finetune_dataset.jsonl:" && head -n 5 finetune_dataset.jsonl
      # 12. Install OpenAI client
      - name: Install OpenAI SDK
        run: pip install openai
      - name: Install OpenAI SDK v1
        run: pip install "openai>=1.0.0"

      # 13. Kick off fineâ€‘tune job
      - name: Run fineâ€‘tune
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python fine_tune.py
